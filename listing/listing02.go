package listing

import (
	"fmt"
)

// В функции test, переменной x присваивается значение 1.
// Затем есть defer функция, которая увеличивает x на 1.
// Затем x возвращается из функции.
// Однако, defer функция выполняется после возврата значения, поэтому она увеличивает x на 1, но это увеличение не влияет на возвращаемое значение.
// Итак, функция test возвращает 1, но defer увеличивает x до 2 после возврата, поэтому fmt.Println(test()) выводит 2.
func test() (x int) {
	defer func() {
		x++
	}()
	x = 1
	return
}

// В функции anotherTest, переменной x присваивается значение 1.
// Затем есть defer функция, которая увеличивает x на 1.
// Затем x возвращается из функции.
// В этом случае, defer функция также выполняется после возврата значения, но так как x возвращается до выполнения defer, возвращаемое значение равно 1.
// Итак, функция anotherTest возвращает 1, и fmt.Println(anotherTest()) выводит 1.
func anotherTest() int {
	var x int
	defer func() {
		x++
	}()
	x = 1
	return x
}

func main() {
	fmt.Println(test())
	fmt.Println(anotherTest())
}

//Вывод функции: 2 1
