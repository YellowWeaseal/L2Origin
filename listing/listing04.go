package listing

func main() {

	//Здесь мы создаем не буферизированный канал ch
	ch := make(chan int)

	//происходит запуск горутины которая в цикле инкрементирует значение и пишет его в канал
	//но так как канал не буферизированный после записи он блокируется пока мы не вычитаем значение из канала
	//таким образом данная функция выведет все значения от 0 до 9 потому что после
	//каждого инкремента мы выходим из горутины
	/*
		Также в данной функции есть ошибка из-за которой возникает deadlock , когда мы заканчиваем запись в канал
		перед выходом из функции необходимо его закрыть
	*/
	go func() {
		for i := 0; i < 10; i++ {
			ch <- i
		}
		//close(ch)  Закрываем канал после завершения отправки данных
	}()

	for n := range ch {
		println(n)
	}

}

/*Вывод программы:
0
1
2
3
4
5
6
7
8
9
fatal error: all goroutines are asleep - deadlock!

goroutine 1 [chan receive]:
main.main()
        C:/Users/kilim/GolandProject/TestListing/main.go:11 +0xa8

Process finished with the exit code 2

*/
